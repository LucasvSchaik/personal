uusing System;
using System.Drawing;
using System.Windows.Forms;
using System.Threading.Tasks;
using System.Security.Cryptography.X509Certificates;
using System.Drawing.Configuration;

Application.Run(new Screen());


public class Screen : Form
{
    //Declaraties 
    int n = 0;
    public int[,] board;
    int rows = 6;
    int columns = 6;
    int size = 50;
    int x, y;
    int turnCount = 0;
    public int xBoard;
    public int yBoard;

    Button restart, help;
    PictureBox grid;

    public Screen()
    {
        x = size * rows;
        y = size * columns;
        board = new int[rows, columns];
        

        drawGUI();
        grid.Paint += drawGrid;
        grid.MouseClick += gridClick;

    }
    /*
     TO DO
         Methoden:
            OnClick
            {
            Translate de muispositie naar de positie in de array.   [DONE]
            Is deze positie legaal.
            Steen neerzetten
            Andere stenen omzetten
            Check of spel klaar is
            }
            

     
     */


    private void drawGrid(object o, PaintEventArgs pea)
    {
        Pen pen = new Pen(Color.Black);


        for (int z = 0; z <= columns; z++)
            pea.Graphics.DrawLine(pen, z * size, 0, z * size, y);

        for (int k = 0; k <= rows; k++)
            pea.Graphics.DrawLine(pen, 0, k * size, x, k * size);
    }

    public void drawGUI()
    {
        ClientSize = new Size(125 + x, 275 + y);
        BackColor = Color.Wheat;
        Text = "Reversi";


        restart = new Button();
        restart.Size = new Size(80, 30);
        restart.Location = new Point(ClientSize.Width/4, 10);
        restart.BackColor = Color.White;
        restart.Text = "Nieuw spel";
        Controls.Add(restart);

        help= new Button();
        help.Size = new Size(80, 30);
        help.Location = new Point(2*ClientSize.Width/4, 10);
        help.BackColor = Color.White;
        help.Text = "Help";
        Controls.Add(help);

        grid = new PictureBox();
        grid.Location = new Point(25, 175);
        grid.Size = new Size(x+1, y+1);
        grid.BackColor = Color.White;
        Controls.Add(grid);  

    }

    public void gridClick(object ob, MouseEventArgs mea)
    {   /* Waarden van mea omzetten in bijbehorende waardes om te gebruiken in array,
         een mea(125,75) zal hierdoor (3,2) worden */
         xBoard = (int)Math.Ceiling(Convert.ToDouble(mea.X / size));
         yBoard = (int)Math.Ceiling(Convert.ToDouble(mea.Y / size));

        if (1==1)
        {
            if (turnCount %2 == 0) //Rood aan zet
            {
                board[xBoard, yBoard] = 1;
                Color color = Color.Red;
                drawPiece(xBoard, yBoard, color);

            }
            else if (turnCount %2 == 1) //Blauw aan zet
            {
                board[xBoard, yBoard] = 2;
                Color color = Color.Blue;
                drawPiece(xBoard, yBoard, color);
            }
            turnCount++;
        }


    }

    private void isValid()
    {
        
    }
    private void drawPiece(int x, int y, Color color)
    {
        x = xBoard * size;
        y = yBoard * size;
        Graphics gr = grid.CreateGraphics();
        
        gr.FillEllipse (new SolidBrush(color), x, y, 48, 48);

    }
}

