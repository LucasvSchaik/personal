using System;
using System.Drawing;
using System.Windows.Forms;
using System.Threading.Tasks;
using System.Security.Cryptography.X509Certificates;
using System.Drawing.Configuration;
using System.Linq;

Application.Run(new Screen());


public class Screen : Form
{
    //Declaraties 
    int n = 0;
    public int[,] board;
    int rows = 6;
    int columns = 6;
    int size = 50;
    int x, y;
    int turnCount = 0;
    bool helpStatus = false;
    

    Button restart, help;
    PictureBox grid;
    Label txt;
    public Screen()
    {
        x = size * rows;
        y = size * columns;
        board = new int[rows, columns];



        DrawGUI();

        grid.Paint += DrawGrid;
        //IsValid();
        
        grid.MouseClick += GridClick;
        restart.Click += RestartGame;
        help.Click += HelpClick;

    }
   

    private void RestartGame(object o, EventArgs e)
    {
        turnCount = 0;
        Array.Clear(board, 0, board.Length);
        Refresh();
        DrawStart();
    }
    private void HelpClick(object o, EventArgs e)
    {
        helpStatus = !helpStatus;
        Refresh();
    }
    private void DrawGrid(object o, PaintEventArgs pea)
    {
        DrawStart();
        Pen pen = new Pen(Color.Black);


        for (int z = 0; z <= columns; z++)
            pea.Graphics.DrawLine(pen, z * size, 0, z * size, y);

        for (int k = 0; k <= rows; k++)
            pea.Graphics.DrawLine(pen, 0, k * size, x, k * size);

        for (int j = 0; j < columns; j++)
        {

            for (int i = 0; i < rows; i++)
            {
                //Graphics gr = grid.CreateGraphics();
                int xDraw = i * size;
                int yDraw = j * size;
                if (board[i,j]==1)
                {
                    pea.Graphics.FillEllipse(new SolidBrush(Color.Red), xDraw + 2, yDraw + 2, 46, 46);
                }
                if (board[i, j] == 2)
                {
                    pea.Graphics.FillEllipse(new SolidBrush(Color.Blue), xDraw + 2, yDraw + 2, 46, 46);
                }

            }
        }


        for (int x = 0; x <= columns; x++)
        {
            for (int y = 0; y <= rows; y++)
            {
                if (helpStatus == true && board[x, y] == 0)
                {
                    pea.Graphics.DrawEllipse(new Pen(Color.Green), x * size + 5, y * size + 5, 40, 40);
                }
            }

        }


    }

    public void DrawStart()
    {
        board[columns/2-1, rows/2-1] = 2;
        board[columns/2-1, rows/2] = 1;
        board[columns/2,rows/2-1] = 1;
        board[columns/2,rows/2] = 2;
       
    }

    public void DrawGUI()
    {
        ClientSize = new Size(125 + x, 275 + y);
        BackColor = Color.Wheat;
        Text = "Reversi";


        restart = new Button();
        restart.Size = new Size(80, 30);
        restart.Location = new Point(ClientSize.Width/4, 10);
        restart.BackColor = Color.White;
        restart.Text = "Nieuw spel";
        Controls.Add(restart);

        help= new Button();
        help.Size = new Size(80, 30);
        help.Location = new Point(2*ClientSize.Width/4, 10);
        help.BackColor = Color.White;
        help.Text = "Help";
        Controls.Add(help);

        grid = new PictureBox();
        grid.Location = new Point(25, 175);
        grid.Size = new Size(x+1, y+1);
        grid.BackColor = Color.White;
        Controls.Add(grid);
        
        txt = new Label();
        txt.Location = new Point(10, 60);
        txt.Size = new Size(60, 160);
        txt.BackColor= Color.White;
        Controls.Add(txt);

        

    }

    public void GridClick(object ob, MouseEventArgs mea)
    {   /* Waarden van mea omzetten in bijbehorende waardes om te gebruiken in array,
         een mea(125,75) zal hierdoor (3,2) worden */
         int xBoard = (int)Math.Ceiling(Convert.ToDouble(mea.X / size));
         int yBoard = (int)Math.Ceiling(Convert.ToDouble(mea.Y / size));


        if (1==1)
        {
            if (turnCount %2 == 0) //Rood aan zet
            {
                board[xBoard, yBoard] = 1;

            }
            else if (turnCount %2 == 1) //Blauw aan zet
            {
                board[xBoard, yBoard] = 2;

            }
            turnCount++;
            grid.Refresh();
        }
        
    }
}

